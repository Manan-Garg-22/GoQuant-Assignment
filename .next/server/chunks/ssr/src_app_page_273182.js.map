{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kumud/Dropbox/My%20PC%20%28Vanshika%29/Desktop/crypto-orderbook/src/app/page.js"],"sourcesContent":["/*import Head from 'next/head';\nimport Orderbook from '../app/components/Orderbook';\nimport CryptoListings from './components/CryptoListings';\nexport default function Home() {\n  return (\n    <div>\n      <Head>\n        <title>Crypto Orderbook</title>\n        <meta name=\"description\" content=\"Real-time crypto orderbook\" />\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n      <main>\n        <h1>BTC-USD Real-Time Orderbook</h1>\n        <Orderbook/>\n        <CryptoListings/>\n      </main>\n    </div>\n  );\n}*/\n\n\"use client\"\n\nimport { useState, useEffect } from 'react'\nimport CryptoListings from './components/CryptoListings'\nimport SpreadIndicator from '../app/components/SpreadIndicator'\nimport ImbalanceIndicator from '../app/components/ImbalanceIndicator'\nimport MarketDepthChart from '../app/components/MarketDepthChart'\nimport CandlestickChart from '../app/components/CandlestickChart'\nimport { fetchOrderbook, fetchOhlcData } from '../app/lib/api'\n\nexport default function Home() {\n  const [selectedCurrency, setSelectedCurrency] = useState('BTCUSDT')\n  const [orderbookData, setOrderbookData] = useState({ bids: [], asks: [] })\n  const [ohlcData, setOhlcData] = useState([])\n\n  const fetchData = async () => {\n    try {\n      const [orderbook, ohlc] = await Promise.all([\n        fetchOrderbook(selectedCurrency),\n        fetchOhlcData(selectedCurrency)\n      ])\n      setOrderbookData(orderbook)\n      setOhlcData(ohlc)\n    } catch (error) {\n      console.error(\"Error fetching data:\", error)\n    }\n  }\n\n  useEffect(() => {\n    fetchData()\n    const interval = setInterval(fetchData, 10000)\n    return () => clearInterval(interval)\n  }, [selectedCurrency])\n\n  return (\n    <div className=\"space-y-8 p-4\">\n      <h1 className=\"text-3xl font-bold mb-8 text-center text-gray-800 dark:text-white\">Crypto Dashboard</h1>\n      <CryptoListings onCurrencyChange={setSelectedCurrency} />\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n        <SpreadIndicator orderbookData={orderbookData} />\n        <ImbalanceIndicator orderbookData={orderbookData} />\n      </div>\n      <MarketDepthChart selectedCurrency={selectedCurrency} />\n      <CandlestickChart ohlcData={ohlcData} currencyPair={selectedCurrency} fetchNewData={fetchData} />\n    </div>\n  )\n}"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;CAkBC;;;;AAID;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;;;;;;;;AAUe,SAAS;IACtB,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QAAE,MAAM,EAAE;QAAE,MAAM,EAAE;IAAC;IACxE,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAE3C,MAAM,YAAY;QAChB,IAAI;YACF,MAAM,CAAC,WAAW,KAAK,GAAG,MAAM,QAAQ,GAAG,CAAC;gBAC1C,CAAA,GAAA,wHAAA,CAAA,iBAAc,AAAD,EAAE;gBACf,CAAA,GAAA,wHAAA,CAAA,gBAAa,AAAD,EAAE;aACf;YACD,iBAAiB;YACjB,YAAY;QACd,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,wBAAwB;QACxC;IACF;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;QACA,MAAM,WAAW,YAAY,WAAW;QACxC,OAAO,IAAM,cAAc;IAC7B,GAAG;QAAC;KAAiB;IAErB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAoE;;;;;;0BAClF,8OAAC,0IAAA,CAAA,UAAc;gBAAC,kBAAkB;;;;;;0BAClC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,2IAAA,CAAA,UAAe;wBAAC,eAAe;;;;;;kCAChC,8OAAC,8IAAA,CAAA,UAAkB;wBAAC,eAAe;;;;;;;;;;;;0BAErC,8OAAC,4IAAA,CAAA,UAAgB;gBAAC,kBAAkB;;;;;;0BACpC,8OAAC,4IAAA,CAAA,UAAgB;gBAAC,UAAU;gBAAU,cAAc;gBAAkB,cAAc;;;;;;;;;;;;AAG1F"}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}