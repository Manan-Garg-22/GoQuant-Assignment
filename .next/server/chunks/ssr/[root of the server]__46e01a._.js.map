{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kumud/Dropbox/My%20PC%20%28Vanshika%29/Desktop/crypto-orderbook/src/app/lib/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const fetchOrderbook = async () => {\r\n  const response = await axios.get('https://api.binance.com/api/v3/depth', {\r\n    params: {\r\n      symbol: 'BTCUSDT',\r\n      limit: 10,\r\n    },\r\n  });\r\n  return response.data;\r\n};\r\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,iBAAiB;IAC5B,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,wCAAwC;QACvE,QAAQ;YACN,QAAQ;YACR,OAAO;QACT;IACF;IACA,OAAO,SAAS,IAAI;AACtB"}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kumud/Dropbox/My%20PC%20%28Vanshika%29/Desktop/crypto-orderbook/src/app/components/Orderbook.js"],"sourcesContent":["\"use client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { fetchOrderbook } from \"../lib/api\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { Chart as ChartJS, registerables } from \"chart.js\";\r\nimport SpreadIndicator from \"../components/SpreadIndicator\"; // Import SpreadIndicator component\r\n\r\nChartJS.register(...registerables);\r\n\r\nconst Orderbook = () => {\r\n  const [orderbook, setOrderbook] = useState({ bids: [], asks: [] });\r\n  const [spread, setSpread] = useState(0);\r\n  const [imbalance, setImbalance] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      const data = await fetchOrderbook();\r\n      setOrderbook(data);\r\n\r\n      // Calculate spread\r\n      const spreadValue =\r\n        data.bids[0] && data.asks[0]\r\n          ? parseFloat(data.asks[0][0]) - parseFloat(data.bids[0][0])\r\n          : 0;\r\n      setSpread(spreadValue);\r\n\r\n      // Calculate orderbook imbalance\r\n      const bidVolume = data.bids.reduce((sum, bid) => sum + parseFloat(bid[1]), 0);\r\n      const askVolume = data.asks.reduce((sum, ask) => sum + parseFloat(ask[1]), 0);\r\n      setImbalance(bidVolume / (bidVolume + askVolume));\r\n    }, 1000); // Update every second\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const marketDepthData = {\r\n    labels: orderbook.bids.map((bid) => bid[0]),\r\n    datasets: [\r\n      {\r\n        label: \"Bids\",\r\n        data: orderbook.bids.map((bid) => bid[1]),\r\n        borderColor: \"green\",\r\n        fill: false,\r\n      },\r\n      {\r\n        label: \"Asks\",\r\n        data: orderbook.asks.map((ask) => ask[1]),\r\n        borderColor: \"red\",\r\n        fill: false,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Real-time BTC-USD Orderbook</h2>\r\n      <div>\r\n        <h3>Spread: {spread}</h3>\r\n        <h3>Imbalance: {imbalance}</h3>\r\n      </div>\r\n      <div>\r\n        <h3>Spread Indicator</h3>\r\n        {/* Add SpreadIndicator Component and pass orderbook data as props */}\r\n        <SpreadIndicator orderbookData={orderbook} />\r\n      </div>\r\n      <div>\r\n        <h3>Bids</h3>\r\n        <ul>\r\n          {orderbook.bids.map((bid, index) => (\r\n            <li key={index}>{`Price: ${bid[0]}, Quantity: ${bid[1]}`}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div>\r\n        <h3>Asks</h3>\r\n        <ul>\r\n          {orderbook.asks.map((ask, index) => (\r\n            <li key={index}>{`Price: ${ask[0]}, Quantity: ${ask[1]}`}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div>\r\n        <h3>Market Depth Chart</h3>\r\n        <Line data={marketDepthData} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Orderbook;\r\n"],"names":[],"mappings":";;;;AACA;AACA;AAGA,kPAA6D,mCAAmC;AADhG;AADA;AAHA;;;;;;;AAOA,4JAAA,CAAA,QAAO,CAAC,QAAQ,IAAI,4JAAA,CAAA,gBAAa;AAEjC,MAAM,YAAY;IAChB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QAAE,MAAM,EAAE;QAAE,MAAM,EAAE;IAAC;IAChE,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,WAAW,YAAY;YAC3B,MAAM,OAAO,MAAM,CAAA,GAAA,wHAAA,CAAA,iBAAc,AAAD;YAChC,aAAa;YAEb,mBAAmB;YACnB,MAAM,cACJ,KAAK,IAAI,CAAC,EAAE,IAAI,KAAK,IAAI,CAAC,EAAE,GACxB,WAAW,KAAK,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,WAAW,KAAK,IAAI,CAAC,EAAE,CAAC,EAAE,IACxD;YACN,UAAU;YAEV,gCAAgC;YAChC,MAAM,YAAY,KAAK,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,MAAQ,MAAM,WAAW,GAAG,CAAC,EAAE,GAAG;YAC3E,MAAM,YAAY,KAAK,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,MAAQ,MAAM,WAAW,GAAG,CAAC,EAAE,GAAG;YAC3E,aAAa,YAAY,CAAC,YAAY,SAAS;QACjD,GAAG,OAAO,sBAAsB;QAEhC,OAAO,IAAM,cAAc;IAC7B,GAAG,EAAE;IAEL,MAAM,kBAAkB;QACtB,QAAQ,UAAU,IAAI,CAAC,GAAG,CAAC,CAAC,MAAQ,GAAG,CAAC,EAAE;QAC1C,UAAU;YACR;gBACE,OAAO;gBACP,MAAM,UAAU,IAAI,CAAC,GAAG,CAAC,CAAC,MAAQ,GAAG,CAAC,EAAE;gBACxC,aAAa;gBACb,MAAM;YACR;YACA;gBACE,OAAO;gBACP,MAAM,UAAU,IAAI,CAAC,GAAG,CAAC,CAAC,MAAQ,GAAG,CAAC,EAAE;gBACxC,aAAa;gBACb,MAAM;YACR;SACD;IACH;IAEA,qBACE,8OAAC;;0BACC,8OAAC;0BAAG;;;;;;0BACJ,8OAAC;;kCACC,8OAAC;;4BAAG;4BAAS;;;;;;;kCACb,8OAAC;;4BAAG;4BAAY;;;;;;;;;;;;;0BAElB,8OAAC;;kCACC,8OAAC;kCAAG;;;;;;kCAEJ,8OAAC,2IAAA,CAAA,UAAe;wBAAC,eAAe;;;;;;;;;;;;0BAElC,8OAAC;;kCACC,8OAAC;kCAAG;;;;;;kCACJ,8OAAC;kCACE,UAAU,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,sBACxB,8OAAC;0CAAgB,CAAC,OAAO,EAAE,GAAG,CAAC,EAAE,CAAC,YAAY,EAAE,GAAG,CAAC,EAAE,EAAE;+BAA/C;;;;;;;;;;;;;;;;0BAIf,8OAAC;;kCACC,8OAAC;kCAAG;;;;;;kCACJ,8OAAC;kCACE,UAAU,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,sBACxB,8OAAC;0CAAgB,CAAC,OAAO,EAAE,GAAG,CAAC,EAAE,CAAC,YAAY,EAAE,GAAG,CAAC,EAAE,EAAE;+BAA/C;;;;;;;;;;;;;;;;0BAIf,8OAAC;;kCACC,8OAAC;kCAAG;;;;;;kCACJ,8OAAC,sJAAA,CAAA,OAAI;wBAAC,MAAM;;;;;;;;;;;;;;;;;;AAIpB;uCAEe"}},
    {"offset": {"line": 315, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 321, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kumud/Dropbox/My%20PC%20%28Vanshika%29/Desktop/crypto-orderbook/src/app/components/MarketDepthChart.js"],"sourcesContent":["// components.js\r\n\"use client\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\n\r\n// Register Chart.js components\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Tooltip, Legend);\r\n\r\nconst MarketDepthChart = () => {\r\n  const [bids, setBids] = useState([]);\r\n  const [asks, setAsks] = useState([]);\r\n  const [midMarketPrice, setMidMarketPrice] = useState(null);\r\n\r\n  // Fetch orderbook data from Binance API\r\n  const fetchOrderBookData = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://api.binance.com/api/v3/depth?symbol=BTCUSDT&limit=10\" // Replace with your API if needed\r\n      );\r\n      const data = await response.json();\r\n\r\n      // Process bids and asks\r\n      const formattedBids = data.bids.map((bid) => ({\r\n        price: parseFloat(bid[0]),\r\n        quantity: parseFloat(bid[1]),\r\n      }));\r\n      const formattedAsks = data.asks.map((ask) => ({\r\n        price: parseFloat(ask[0]),\r\n        quantity: parseFloat(ask[1]),\r\n      }));\r\n\r\n      // Calculate cumulative quantities for depth\r\n      const bidsWithCumulativeQty = calculateCumulativeDepth(formattedBids);\r\n      const asksWithCumulativeQty = calculateCumulativeDepth(formattedAsks);\r\n\r\n      // Set state\r\n      setBids(bidsWithCumulativeQty.reverse()); // Reverse bids for proper plotting\r\n      setAsks(asksWithCumulativeQty);\r\n      setMidMarketPrice(\r\n        (parseFloat(data.bids[0][0]) + parseFloat(data.asks[0][0])) / 2\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error fetching orderbook data:\", error);\r\n    }\r\n  };\r\n\r\n  // Helper function to calculate cumulative depth\r\n  const calculateCumulativeDepth = (orders) => {\r\n    let cumulativeQty = 0;\r\n    return orders.map((order) => {\r\n      cumulativeQty += order.quantity;\r\n      return { ...order, cumulativeQty };\r\n    });\r\n  };\r\n\r\n  // Fetch data every second\r\n  useEffect(() => {\r\n    fetchOrderBookData();\r\n    const interval = setInterval(fetchOrderBookData, 1000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Chart data\r\n  const chartData = {\r\n    labels: [...bids.map((bid) => bid.price), ...asks.map((ask) => ask.price)],\r\n    datasets: [\r\n      {\r\n        label: \"Market Depth\",\r\n        data: [\r\n          ...bids.map((bid) => bid.cumulativeQty),\r\n          ...asks.map((ask) => ask.cumulativeQty),\r\n        ],\r\n        borderColor: \"rgba(0,0,0,0)\",\r\n        backgroundColor: (context) => {\r\n          const chartLabels = context.chart.data.labels;\r\n          return chartLabels.map((price) =>\r\n            price <= midMarketPrice\r\n              ? \"rgba(0, 255, 0, 0.5)\" // Green for bids\r\n              : \"rgba(255, 0, 0, 0.5)\" // Red for asks\r\n          );\r\n        },\r\n        fill: true,\r\n        tension: 0.1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  // Chart options\r\n  const chartOptions = {\r\n    responsive: true,\r\n    scales: {\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: \"Price (USD)\",\r\n        },\r\n        grid: {\r\n          display: false,\r\n        },\r\n      },\r\n      y: {\r\n        title: {\r\n          display: true,\r\n          text: \"Cumulative Quantity\",\r\n        },\r\n      },\r\n    },\r\n    plugins: {\r\n      tooltip: {\r\n        callbacks: {\r\n          label: (context) =>\r\n            `Price: ${context.label}, Depth: ${context.raw.toFixed(2)}`,\r\n        },\r\n      },\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: \"800px\", margin: \"0 auto\", padding: \"20px\" }}>\r\n      <h2 style={{ textAlign: \"center\" }}>Depth Chart</h2>\r\n      <Line data={chartData} options={chartOptions} />\r\n      <p style={{ textAlign: \"center\" }}>\r\n        Mid Market Price: {midMarketPrice?.toFixed(2)}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarketDepthChart;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 485, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}