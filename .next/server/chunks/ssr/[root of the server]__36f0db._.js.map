{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kumud/Dropbox/My%20PC%20%28Vanshika%29/Desktop/crypto-orderbook/src/app/lib/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst symbolMap = {\r\n  \"BTC-USD\": \"BTCUSDT\",\r\n  \"ETH-USD\": \"ETHUSDT\",\r\n  \"XRP-USD\": \"XRPUSDT\",\r\n  \"BNB-USD\": \"BNBUSDT\",\r\n  \"SOL-USD\": \"SOLUSDT\",\r\n  \"DOGE-USD\": \"DOGEUSDT\",\r\n  \"LTC-USD\": \"LTCUSDT\",\r\n};\r\n\r\nexport const fetchOrderbook = async (currencyPair) => {\r\n  const symbol = symbolMap[currencyPair];\r\n  const response = await axios.get('https://api.binance.com/api/v3/depth', {\r\n    params: {\r\n      symbol: symbol,\r\n      limit: 10,\r\n    },\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const fetchOhlcData = async (currencyPair) => {\r\n  const symbol = symbolMap[currencyPair];\r\n  const response = await axios.get('https://api.binance.com/api/v3/klines', {\r\n    params: {\r\n      symbol: symbol,\r\n      interval: '1m',\r\n      limit: 100,\r\n    },\r\n  });\r\n\r\n  const ohlcData = response.data.map(item => ({\r\n    t: new Date(item[0]),\r\n    o: parseFloat(item[1]),\r\n    h: parseFloat(item[2]),\r\n    l: parseFloat(item[3]),\r\n    c: parseFloat(item[4]),\r\n  }));\r\n\r\n  return ohlcData;\r\n};"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,YAAY;IAChB,WAAW;IACX,WAAW;IACX,WAAW;IACX,WAAW;IACX,WAAW;IACX,YAAY;IACZ,WAAW;AACb;AAEO,MAAM,iBAAiB,OAAO;IACnC,MAAM,SAAS,SAAS,CAAC,aAAa;IACtC,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,wCAAwC;QACvE,QAAQ;YACN,QAAQ;YACR,OAAO;QACT;IACF;IACA,OAAO,SAAS,IAAI;AACtB;AAEO,MAAM,gBAAgB,OAAO;IAClC,MAAM,SAAS,SAAS,CAAC,aAAa;IACtC,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,yCAAyC;QACxE,QAAQ;YACN,QAAQ;YACR,UAAU;YACV,OAAO;QACT;IACF;IAEA,MAAM,WAAW,SAAS,IAAI,CAAC,GAAG,CAAC,CAAA,OAAQ,CAAC;YAC1C,GAAG,IAAI,KAAK,IAAI,CAAC,EAAE;YACnB,GAAG,WAAW,IAAI,CAAC,EAAE;YACrB,GAAG,WAAW,IAAI,CAAC,EAAE;YACrB,GAAG,WAAW,IAAI,CAAC,EAAE;YACrB,GAAG,WAAW,IAAI,CAAC,EAAE;QACvB,CAAC;IAED,OAAO;AACT"}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kumud/Dropbox/My%20PC%20%28Vanshika%29/Desktop/crypto-orderbook/src/app/components/SpreadIndicator.js"],"sourcesContent":["/*\"use client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { Chart as ChartJS, registerables } from \"chart.js\";\r\n\r\nChartJS.register(...registerables);\r\n\r\nconst SpreadIndicator = ({ orderbookData }) => {\r\n  const [spreadHistory, setSpreadHistory] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const { bids, asks } = orderbookData;\r\n\r\n      // Ensure bids and asks exist\r\n      if (!bids.length || !asks.length) return;\r\n\r\n      // Calculate the current spread\r\n      const currentSpread = parseFloat(asks[0][0]) - parseFloat(bids[0][0]);\r\n      const timestamp = Date.now(); // Use current timestamp\r\n\r\n      // Add the new spread value to the history\r\n      setSpreadHistory((prev) => {\r\n        // Remove points older than 1 minute (60,000 ms)\r\n        const updatedHistory = prev.filter(\r\n          (dataPoint) => timestamp - dataPoint.timestamp <= 60000\r\n        );\r\n\r\n        // Add the new data point and return\r\n        return [...updatedHistory, { spread: currentSpread, timestamp }];\r\n      });\r\n    }, 1000); // Update every second\r\n\r\n    return () => clearInterval(interval);\r\n  }, [orderbookData]);\r\n\r\n  // Prepare data for the chart\r\n  const data = {\r\n    labels: spreadHistory.map((dataPoint) =>\r\n      new Date(dataPoint.timestamp).toLocaleTimeString()\r\n    ),\r\n    datasets: [\r\n      {\r\n        label: \"Spread (USD)\",\r\n        data: spreadHistory.map((dataPoint) => dataPoint.spread),\r\n        borderColor: \"blue\",\r\n        backgroundColor: \"rgba(135, 206, 250, 0.3)\", // Light blue fill\r\n        fill: true,\r\n        tension: 0.1,\r\n        pointRadius: 2,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        display: true,\r\n        position: \"top\",\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: \"Time\",\r\n        },\r\n      },\r\n      y: {\r\n        title: {\r\n          display: true,\r\n          text: \"Spread\",\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Spread Indicator</h3>\r\n      <Line data={data} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpreadIndicator;*/\r\n\r\n// app/components/SpreadIndicator.js\r\n\"use client\"\r\n\r\nimport { useEffect, useState } from \"react\"\r\nimport { Line } from \"react-chartjs-2\"\r\nimport { Chart as ChartJS, registerables } from \"chart.js\"\r\nimport { useTheme } from 'next-themes'\r\n\r\nChartJS.register(...registerables)\r\n\r\nconst SpreadIndicator = ({ orderbookData }) => {\r\n  const [spreadHistory, setSpreadHistory] = useState([])\r\n  const { theme } = useTheme()\r\n\r\n  // ... (keep existing useEffect and data processing logic)\r\n\r\n  const data = {\r\n    labels: spreadHistory.map((dataPoint) =>\r\n      new Date(dataPoint.timestamp).toLocaleTimeString()\r\n    ),\r\n    datasets: [\r\n      {\r\n        label: \"Spread (USD)\",\r\n        data: spreadHistory.map((dataPoint) => dataPoint.spread),\r\n        borderColor: theme === 'dark' ? \"#3b82f6\" : \"#2563eb\",\r\n        backgroundColor: theme === 'dark' ? \"rgba(59, 130, 246, 0.1)\" : \"rgba(37, 99, 235, 0.1)\",\r\n        fill: true,\r\n        tension: 0.1,\r\n        pointRadius: 2,\r\n      },\r\n    ],\r\n  }\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        display: true,\r\n        position: \"top\",\r\n        labels: {\r\n          color: theme === 'dark' ? \"#ffffff\" : \"#000000\",\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: \"Time\",\r\n          color: theme === 'dark' ? \"#ffffff\" : \"#000000\",\r\n        },\r\n        ticks: {\r\n          color: theme === 'dark' ? \"#ffffff\" : \"#000000\",\r\n        },\r\n        grid: {\r\n          color: theme === 'dark' ? \"rgba(255, 255, 255, 0.1)\" : \"rgba(0, 0, 0, 0.1)\",\r\n        },\r\n      },\r\n      y: {\r\n        title: {\r\n          display: true,\r\n          text: \"Spread\",\r\n          color: theme === 'dark' ? \"#ffffff\" : \"#000000\",\r\n        },\r\n        ticks: {\r\n          color: theme === 'dark' ? \"#ffffff\" : \"#000000\",\r\n        },\r\n        grid: {\r\n          color: theme === 'dark' ? \"rgba(255, 255, 255, 0.1)\" : \"rgba(0, 0, 0, 0.1)\",\r\n        },\r\n      },\r\n    },\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-md\">\r\n      <h3 className=\"text-lg font-semibold mb-4 text-gray-800 dark:text-white\">Spread Indicator</h3>\r\n      <Line data={data} options={options} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SpreadIndicator;\r\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+BAsF+B,GAE/B,oCAAoC;;;;;AAGpC;AAGA;AADA;AADA;AAHA;;;;;;AAOA,4JAAA,CAAA,QAAO,CAAC,QAAQ,IAAI,4JAAA,CAAA,gBAAa;AAEjC,MAAM,kBAAkB,CAAC,EAAE,aAAa,EAAE;IACxC,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IACrD,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,gJAAA,CAAA,WAAQ,AAAD;IAEzB,0DAA0D;IAE1D,MAAM,OAAO;QACX,QAAQ,cAAc,GAAG,CAAC,CAAC,YACzB,IAAI,KAAK,UAAU,SAAS,EAAE,kBAAkB;QAElD,UAAU;YACR;gBACE,OAAO;gBACP,MAAM,cAAc,GAAG,CAAC,CAAC,YAAc,UAAU,MAAM;gBACvD,aAAa,UAAU,SAAS,YAAY;gBAC5C,iBAAiB,UAAU,SAAS,4BAA4B;gBAChE,MAAM;gBACN,SAAS;gBACT,aAAa;YACf;SACD;IACH;IAEA,MAAM,UAAU;QACd,YAAY;QACZ,SAAS;YACP,QAAQ;gBACN,SAAS;gBACT,UAAU;gBACV,QAAQ;oBACN,OAAO,UAAU,SAAS,YAAY;gBACxC;YACF;QACF;QACA,QAAQ;YACN,GAAG;gBACD,OAAO;oBACL,SAAS;oBACT,MAAM;oBACN,OAAO,UAAU,SAAS,YAAY;gBACxC;gBACA,OAAO;oBACL,OAAO,UAAU,SAAS,YAAY;gBACxC;gBACA,MAAM;oBACJ,OAAO,UAAU,SAAS,6BAA6B;gBACzD;YACF;YACA,GAAG;gBACD,OAAO;oBACL,SAAS;oBACT,MAAM;oBACN,OAAO,UAAU,SAAS,YAAY;gBACxC;gBACA,OAAO;oBACL,OAAO,UAAU,SAAS,YAAY;gBACxC;gBACA,MAAM;oBACJ,OAAO,UAAU,SAAS,6BAA6B;gBACzD;YACF;QACF;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA2D;;;;;;0BACzE,8OAAC,sJAAA,CAAA,OAAI;gBAAC,MAAM;gBAAM,SAAS;;;;;;;;;;;;AAGjC;uCAEe"}},
    {"offset": {"line": 323, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 329, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kumud/Dropbox/My%20PC%20%28Vanshika%29/Desktop/crypto-orderbook/src/app/components/CandlestickChart.js"],"sourcesContent":["/*\"use client\";\r\n\r\nimport { useEffect, useRef } from \"react\";\r\nimport { Chart } from \"chart.js\";\r\nimport { CandlestickController, CandlestickElement } from \"chartjs-chart-financial\";\r\nimport 'chartjs-adapter-date-fns';\r\n\r\nChart.register(CandlestickController, CandlestickElement);\r\n\r\nconst CandlestickChart = ({ ohlcData, currencyPair, fetchNewData }) => {\r\n  const canvasRef = useRef(null);\r\n  const chartRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!ohlcData || ohlcData.length === 0 || !canvasRef.current) return;\r\n\r\n    const ctx = canvasRef.current.getContext(\"2d\");\r\n    if (!ctx) return;\r\n\r\n    // Chart configuration\r\n    const chartConfig = {\r\n      type: \"candlestick\",\r\n      data: {\r\n        datasets: [\r\n          {\r\n            label: currencyPair,\r\n            data: ohlcData.map(d => ({\r\n              x: d.t, // Timestamp\r\n              o: d.o, // Open\r\n              h: d.h, // High\r\n              l: d.l, // Low\r\n              c: d.c, // Close\r\n            })),\r\n            borderColor: {\r\n              up: \"#26a69a\", // Green for upward\r\n              down: \"#ef5350\", // Red for downward\r\n            },\r\n            backgroundColor: {\r\n              up: \"#26a69a\",\r\n              down: \"#ef5350\",\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        layout: {\r\n          padding: 10,\r\n        },\r\n        scales: {\r\n          x: {\r\n            type: \"time\",\r\n            time: {\r\n              unit: \"minute\",\r\n            },\r\n            grid: {\r\n              color: \"rgba(255, 255, 255, 0.1)\",\r\n            },\r\n            ticks: {\r\n              color: \"rgba(255, 255, 255, 0.8)\",\r\n            },\r\n          },\r\n          y: {\r\n            grid: {\r\n              color: \"rgba(255, 255, 255, 0.1)\",\r\n            },\r\n            ticks: {\r\n              color: \"rgba(255, 255, 255, 0.8)\",\r\n            },\r\n          },\r\n        },\r\n        plugins: {\r\n          tooltip: {\r\n            callbacks: {\r\n              label: context => {\r\n                const point = context.raw;\r\n                return [\r\n                  `Open: ${point.o}`,\r\n                  `High: ${point.h}`,\r\n                  `Low: ${point.l}`,\r\n                  `Close: ${point.c}`,\r\n                ];\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    };\r\n\r\n    if (chartRef.current) {\r\n      chartRef.current.destroy();\r\n    }\r\n\r\n    chartRef.current = new Chart(ctx, chartConfig);\r\n\r\n    return () => {\r\n      if (chartRef.current) {\r\n        chartRef.current.destroy();\r\n      }\r\n    };\r\n  }, [ohlcData, currencyPair]);\r\n\r\n  // Polling for data updates\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (fetchNewData) {\r\n        fetchNewData();\r\n      }\r\n    }, 10000); // Fetch data every 10 seconds\r\n\r\n    return () => clearInterval(interval);\r\n  }, [fetchNewData]);\r\n\r\n  return (\r\n    <div style={{ backgroundColor: \"#131722\", padding: \"20px\", borderRadius: \"4px\" }}>\r\n      <h3 style={{ color: \"white\", marginBottom: \"20px\" }}>{currencyPair} Candlestick Chart</h3>\r\n      <div style={{ height: \"400px\" }}>\r\n        <canvas ref={canvasRef}></canvas>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CandlestickChart;*/\r\n\r\n\"use client\"\r\n\r\nimport { useEffect, useRef } from \"react\"\r\nimport { Chart } from \"chart.js\"\r\nimport { CandlestickController, CandlestickElement } from \"chartjs-chart-financial\"\r\nimport 'chartjs-adapter-date-fns'\r\nimport { useTheme } from 'next-themes'\r\n\r\nChart.register(CandlestickController, CandlestickElement)\r\n\r\nconst CandlestickChart = ({ ohlcData, currencyPair, fetchNewData }) => {\r\n  const canvasRef = useRef(null)\r\n  const chartRef = useRef(null)\r\n  const { theme } = useTheme()\r\n\r\n  useEffect(() => {\r\n    if (!ohlcData || ohlcData.length === 0 || !canvasRef.current) return\r\n\r\n    const ctx = canvasRef.current.getContext(\"2d\")\r\n    if (!ctx) return\r\n\r\n    const chartConfig = {\r\n      type: \"candlestick\",\r\n      data: {\r\n        datasets: [\r\n          {\r\n            label: currencyPair,\r\n            data: ohlcData.map(d => ({\r\n              x: d.t,\r\n              o: d.o,\r\n              h: d.h,\r\n              l: d.l,\r\n              c: d.c,\r\n            })),\r\n            borderColor: {\r\n              up: theme === 'dark' ? \"#22c55e\" : \"#15803d\",\r\n              down: theme === 'dark' ? \"#ef4444\" : \"#b91c1c\",\r\n            },\r\n            backgroundColor: {\r\n              up: theme === 'dark' ? \"#22c55e\" : \"#15803d\",\r\n              down: theme === 'dark' ? \"#ef4444\" : \"#b91c1c\",\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        layout: {\r\n          padding: 10,\r\n        },\r\n        scales: {\r\n          x: {\r\n            type: \"time\",\r\n            time: {\r\n              unit: \"minute\",\r\n            },\r\n            grid: {\r\n              color: theme === 'dark' ? \"rgba(255, 255, 255, 0.1)\" : \"rgba(0, 0, 0, 0.1)\",\r\n            },\r\n            ticks: {\r\n              color: theme === 'dark' ? \"#ffffff\" : \"#000000\",\r\n            },\r\n          },\r\n          y: {\r\n            grid: {\r\n              color: theme === 'dark' ? \"rgba(255, 255, 255, 0.1)\" : \"rgba(0, 0, 0, 0.1)\",\r\n            },\r\n            ticks: {\r\n              color: theme === 'dark' ? \"#ffffff\" : \"#000000\",\r\n            },\r\n          },\r\n        },\r\n        plugins: {\r\n          legend: {\r\n            display: false,\r\n          },\r\n          tooltip: {\r\n            callbacks: {\r\n              label: context => {\r\n                const point = context.raw\r\n                return [\r\n                  `Open: ${point.o}`,\r\n                  `High: ${point.h}`,\r\n                  `Low: ${point.l}`,\r\n                  `Close: ${point.c}`,\r\n                ]\r\n              },\r\n            },\r\n            backgroundColor: theme === 'dark' ? \"rgba(0, 0, 0, 0.8)\" : \"rgba(255, 255, 255, 0.8)\",\r\n            titleColor: theme === 'dark' ? \"#ffffff\" : \"#000000\",\r\n            bodyColor: theme === 'dark' ? \"#ffffff\" : \"#000000\",\r\n            borderColor: theme === 'dark' ? \"rgba(255, 255, 255, 0.2)\" : \"rgba(0, 0, 0, 0.2)\",\r\n            borderWidth: 1,\r\n          },\r\n        },\r\n      },\r\n    }\r\n\r\n    if (chartRef.current) {\r\n      chartRef.current.destroy()\r\n    }\r\n\r\n    chartRef.current = new Chart(ctx, chartConfig)\r\n\r\n    return () => {\r\n      if (chartRef.current) {\r\n        chartRef.current.destroy()\r\n      }\r\n    }\r\n  }, [ohlcData, currencyPair, theme])\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (fetchNewData) {\r\n        fetchNewData()\r\n      }\r\n    }, 10000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [fetchNewData])\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-md\">\r\n      <h3 className=\"text-lg font-semibold mb-4 text-gray-800 dark:text-white\">{currencyPair} Candlestick Chart</h3>\r\n      <div className=\"h-[400px]\">\r\n        <canvas ref={canvasRef}></canvas>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CandlestickChart;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 615, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 621, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kumud/Dropbox/My%20PC%20%28Vanshika%29/Desktop/crypto-orderbook/src/app/components/ImbalanceIndicator.js"],"sourcesContent":["/*\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { Chart as ChartJS, registerables } from \"chart.js\";\r\n\r\nChartJS.register(...registerables);\r\n\r\nconst ImbalanceIndicator = ({ orderbookData }) => {\r\n  const [imbalanceHistory, setImbalanceHistory] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const { bids, asks } = orderbookData;\r\n\r\n      // Ensure bids and asks exist\r\n      if (!bids.length || !asks.length) return;\r\n\r\n      // Calculate the current imbalance\r\n      const bidVolume = bids.reduce((sum, bid) => sum + parseFloat(bid[1]), 0);\r\n      const askVolume = asks.reduce((sum, ask) => sum + parseFloat(ask[1]), 0);\r\n      const currentImbalance = bidVolume / (bidVolume + askVolume);\r\n      const timestamp = Date.now();\r\n\r\n      // Add the new imbalance value to the history\r\n      setImbalanceHistory((prev) => {\r\n        // Remove points older than 1 minute (60,000 ms)\r\n        const updatedHistory = prev.filter(\r\n          (dataPoint) => timestamp - dataPoint.timestamp <= 60000\r\n        );\r\n\r\n        // Add the new data point and return\r\n        return [...updatedHistory, { imbalance: currentImbalance, timestamp }];\r\n      });\r\n    }, 1000); // Update every second\r\n\r\n    return () => clearInterval(interval);\r\n  }, [orderbookData]);\r\n\r\n  // Prepare data for the chart\r\n  const data = {\r\n    labels: imbalanceHistory.map((dataPoint) =>\r\n      new Date(dataPoint.timestamp).toLocaleTimeString()\r\n    ),\r\n    datasets: [\r\n      {\r\n        label: \"Imbalance\",\r\n        data: imbalanceHistory.map((dataPoint) => dataPoint.imbalance),\r\n        borderColor: \"purple\",\r\n        backgroundColor: \"rgba(128, 0, 128, 0.2)\",\r\n        tension: 0.1,\r\n        pointRadius: 2,\r\n        fill: true,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        display: true,\r\n        position: \"top\",\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: \"Time\",\r\n        },\r\n      },\r\n      y: {\r\n        title: {\r\n          display: true,\r\n          text: \"Imbalance\",\r\n        },\r\n        min: 0,\r\n        max: 1,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Imbalance Indicator</h3>\r\n      <Line data={data} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImbalanceIndicator;*/\r\n\r\n\"use client\"\r\n\r\nimport { useEffect, useState } from \"react\"\r\nimport { Line } from \"react-chartjs-2\"\r\nimport { Chart as ChartJS, registerables } from \"chart.js\"\r\nimport { useTheme } from 'next-themes'\r\n\r\nChartJS.register(...registerables)\r\n\r\nconst ImbalanceIndicator = ({ orderbookData }) => {\r\n  const [imbalanceHistory, setImbalanceHistory] = useState([])\r\n  const { theme } = useTheme()\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const { bids, asks } = orderbookData\r\n\r\n      if (!bids.length || !asks.length) return\r\n\r\n      const bidVolume = bids.reduce((sum, bid) => sum + parseFloat(bid[1]), 0)\r\n      const askVolume = asks.reduce((sum, ask) => sum + parseFloat(ask[1]), 0)\r\n      const currentImbalance = bidVolume / (bidVolume + askVolume)\r\n      const timestamp = Date.now()\r\n\r\n      setImbalanceHistory((prev) => {\r\n        const updatedHistory = prev.filter(\r\n          (dataPoint) => timestamp - dataPoint.timestamp <= 60000\r\n        )\r\n        return [...updatedHistory, { imbalance: currentImbalance, timestamp }]\r\n      })\r\n    }, 1000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [orderbookData])\r\n\r\n  const data = {\r\n    labels: imbalanceHistory.map((dataPoint) =>\r\n      new Date(dataPoint.timestamp).toLocaleTimeString()\r\n    ),\r\n    datasets: [\r\n      {\r\n        label: \"Imbalance\",\r\n        data: imbalanceHistory.map((dataPoint) => dataPoint.imbalance),\r\n        borderColor: theme === 'dark' ? \"#8b5cf6\" : \"#6d28d9\",\r\n        backgroundColor: theme === 'dark' ? \"rgba(139, 92, 246, 0.1)\" : \"rgba(109, 40, 217, 0.1)\",\r\n        tension: 0.1,\r\n        pointRadius: 2,\r\n        fill: true,\r\n      },\r\n    ],\r\n  }\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        display: true,\r\n        position: \"top\",\r\n        labels: {\r\n          color: theme === 'dark' ? \"#ffffff\" : \"#000000\",\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: \"Time\",\r\n          color: theme === 'dark' ? \"#ffffff\" : \"#000000\",\r\n        },\r\n        ticks: {\r\n          color: theme === 'dark' ? \"#ffffff\" : \"#000000\",\r\n        },\r\n        grid: {\r\n          color: theme === 'dark' ? \"rgba(255, 255, 255, 0.1)\" : \"rgba(0, 0, 0, 0.1)\",\r\n        },\r\n      },\r\n      y: {\r\n        title: {\r\n          display: true,\r\n          text: \"Imbalance\",\r\n          color: theme === 'dark' ? \"#ffffff\" : \"#000000\",\r\n        },\r\n        ticks: {\r\n          color: theme === 'dark' ? \"#ffffff\" : \"#000000\",\r\n        },\r\n        grid: {\r\n          color: theme === 'dark' ? \"rgba(255, 255, 255, 0.1)\" : \"rgba(0, 0, 0, 0.1)\",\r\n        },\r\n        min: 0,\r\n        max: 1,\r\n      },\r\n    },\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-md\">\r\n      <h3 className=\"text-lg font-semibold mb-4 text-gray-800 dark:text-white\">Imbalance Indicator</h3>\r\n      <Line data={data} options={options} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImbalanceIndicator;"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCA2FkC;;;;AAIlC;AAGA;AADA;AADA;AAHA;;;;;;AAOA,4JAAA,CAAA,QAAO,CAAC,QAAQ,IAAI,4JAAA,CAAA,gBAAa;AAEjC,MAAM,qBAAqB,CAAC,EAAE,aAAa,EAAE;IAC3C,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAC3D,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,gJAAA,CAAA,WAAQ,AAAD;IAEzB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,WAAW,YAAY;YAC3B,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG;YAEvB,IAAI,CAAC,KAAK,MAAM,IAAI,CAAC,KAAK,MAAM,EAAE;YAElC,MAAM,YAAY,KAAK,MAAM,CAAC,CAAC,KAAK,MAAQ,MAAM,WAAW,GAAG,CAAC,EAAE,GAAG;YACtE,MAAM,YAAY,KAAK,MAAM,CAAC,CAAC,KAAK,MAAQ,MAAM,WAAW,GAAG,CAAC,EAAE,GAAG;YACtE,MAAM,mBAAmB,YAAY,CAAC,YAAY,SAAS;YAC3D,MAAM,YAAY,KAAK,GAAG;YAE1B,oBAAoB,CAAC;gBACnB,MAAM,iBAAiB,KAAK,MAAM,CAChC,CAAC,YAAc,YAAY,UAAU,SAAS,IAAI;gBAEpD,OAAO;uBAAI;oBAAgB;wBAAE,WAAW;wBAAkB;oBAAU;iBAAE;YACxE;QACF,GAAG;QAEH,OAAO,IAAM,cAAc;IAC7B,GAAG;QAAC;KAAc;IAElB,MAAM,OAAO;QACX,QAAQ,iBAAiB,GAAG,CAAC,CAAC,YAC5B,IAAI,KAAK,UAAU,SAAS,EAAE,kBAAkB;QAElD,UAAU;YACR;gBACE,OAAO;gBACP,MAAM,iBAAiB,GAAG,CAAC,CAAC,YAAc,UAAU,SAAS;gBAC7D,aAAa,UAAU,SAAS,YAAY;gBAC5C,iBAAiB,UAAU,SAAS,4BAA4B;gBAChE,SAAS;gBACT,aAAa;gBACb,MAAM;YACR;SACD;IACH;IAEA,MAAM,UAAU;QACd,YAAY;QACZ,SAAS;YACP,QAAQ;gBACN,SAAS;gBACT,UAAU;gBACV,QAAQ;oBACN,OAAO,UAAU,SAAS,YAAY;gBACxC;YACF;QACF;QACA,QAAQ;YACN,GAAG;gBACD,OAAO;oBACL,SAAS;oBACT,MAAM;oBACN,OAAO,UAAU,SAAS,YAAY;gBACxC;gBACA,OAAO;oBACL,OAAO,UAAU,SAAS,YAAY;gBACxC;gBACA,MAAM;oBACJ,OAAO,UAAU,SAAS,6BAA6B;gBACzD;YACF;YACA,GAAG;gBACD,OAAO;oBACL,SAAS;oBACT,MAAM;oBACN,OAAO,UAAU,SAAS,YAAY;gBACxC;gBACA,OAAO;oBACL,OAAO,UAAU,SAAS,YAAY;gBACxC;gBACA,MAAM;oBACJ,OAAO,UAAU,SAAS,6BAA6B;gBACzD;gBACA,KAAK;gBACL,KAAK;YACP;QACF;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA2D;;;;;;0BACzE,8OAAC,sJAAA,CAAA,OAAI;gBAAC,MAAM;gBAAM,SAAS;;;;;;;;;;;;AAGjC;uCAEe"}},
    {"offset": {"line": 836, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 842, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kumud/Dropbox/My%20PC%20%28Vanshika%29/Desktop/crypto-orderbook/src/app/components/CurrencySelector.js"],"sourcesContent":["\"use client\";\r\n\r\nconst CurrencySelector = ({ selectedCurrency, onCurrencyChange }) => {\r\n  const currencies = [\"BTC-USD\", \"ETH-USD\", \"XRP-USD\", \"BNB-USD\", \"SOL-USD\", \"DOGE-USD\", \"LTC-USD\"];\r\n\r\n  return (\r\n    <div className=\"flex flex-wrap justify-center space-x-2 space-y-2 mb-4\">\r\n      {currencies.map((currency) => (\r\n        <button\r\n          style={{\r\n            padding: \"10px 20px\",\r\n            margin: \"5px\",\r\n            border: \"2px solid\",\r\n            borderColor: selectedCurrency === currency ? \"blue\" : \"gray\",\r\n            backgroundColor: selectedCurrency === currency ? \"blue\" : \"white\",\r\n            color: selectedCurrency === currency ? \"white\" : \"black\",\r\n            borderRadius: \"6px\",\r\n            cursor: \"pointer\",\r\n            fontSize: \"14px\",\r\n            fontWeight: \"bold\",\r\n            transition: \"all 0.3s ease\",\r\n            boxShadow: \"0px 4px 6px rgba(0, 0, 0, 0.1)\",\r\n          }}\r\n          key={currency}\r\n          onClick={() => onCurrencyChange(currency)}\r\n          variant={selectedCurrency === currency ? \"default\" : \"outline\"}\r\n        >\r\n          {currency}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrencySelector;"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,mBAAmB,CAAC,EAAE,gBAAgB,EAAE,gBAAgB,EAAE;IAC9D,MAAM,aAAa;QAAC;QAAW;QAAW;QAAW;QAAW;QAAW;QAAY;KAAU;IAEjG,qBACE,8OAAC;QAAI,WAAU;kBACZ,WAAW,GAAG,CAAC,CAAC,yBACf,8OAAC;gBACC,OAAO;oBACL,SAAS;oBACT,QAAQ;oBACR,QAAQ;oBACR,aAAa,qBAAqB,WAAW,SAAS;oBACtD,iBAAiB,qBAAqB,WAAW,SAAS;oBAC1D,OAAO,qBAAqB,WAAW,UAAU;oBACjD,cAAc;oBACd,QAAQ;oBACR,UAAU;oBACV,YAAY;oBACZ,YAAY;oBACZ,WAAW;gBACb;gBAEA,SAAS,IAAM,iBAAiB;gBAChC,SAAS,qBAAqB,WAAW,YAAY;0BAEpD;eAJI;;;;;;;;;;AASf;uCAEe"}},
    {"offset": {"line": 890, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 896, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kumud/Dropbox/My%20PC%20%28Vanshika%29/Desktop/crypto-orderbook/src/app/components/MarketDepthChart.js"],"sourcesContent":["/*\"use client\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport { fetchOrderbook } from \"../lib/api\"; // Use the fetchOrderbook function\r\n\r\n// Register Chart.js components\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Tooltip, Legend);\r\n\r\nconst MarketDepthChart = ({ selectedCurrency }) => {\r\n  const [bids, setBids] = useState([]);\r\n  const [asks, setAsks] = useState([]);\r\n  const [midMarketPrice, setMidMarketPrice] = useState(null);\r\n\r\n  // Fetch orderbook data based on the selected currency\r\n  const fetchOrderBookData = async () => {\r\n    try {\r\n      const data = await fetchOrderbook(selectedCurrency); // Use selectedCurrency as input\r\n      const formattedBids = data.bids.map((bid) => ({\r\n        price: parseFloat(bid[0]),\r\n        quantity: parseFloat(bid[1]),\r\n      }));\r\n      const formattedAsks = data.asks.map((ask) => ({\r\n        price: parseFloat(ask[0]),\r\n        quantity: parseFloat(ask[1]),\r\n      }));\r\n\r\n      // Calculate cumulative quantities for depth\r\n      const bidsWithCumulativeQty = calculateCumulativeDepth(formattedBids);\r\n      const asksWithCumulativeQty = calculateCumulativeDepth(formattedAsks);\r\n\r\n      // Update state\r\n      setBids(bidsWithCumulativeQty.reverse());\r\n      setAsks(asksWithCumulativeQty);\r\n      setMidMarketPrice(\r\n        (parseFloat(data.bids[0][0]) + parseFloat(data.asks[0][0])) / 2\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error fetching orderbook data:\", error);\r\n    }\r\n  };\r\n\r\n  // Helper function to calculate cumulative depth\r\n  const calculateCumulativeDepth = (orders) => {\r\n    let cumulativeQty = 0;\r\n    return orders.map((order) => {\r\n      cumulativeQty += order.quantity;\r\n      return { ...order, cumulativeQty };\r\n    });\r\n  };\r\n\r\n  // Re-fetch data when the selected currency changes\r\n  useEffect(() => {\r\n    fetchOrderBookData();\r\n    const interval = setInterval(fetchOrderBookData, 1000);\r\n    return () => clearInterval(interval);\r\n  }, [selectedCurrency]); // Dependency on selectedCurrency\r\n\r\n  // Chart data\r\n  const chartData = {\r\n    labels: [...bids.map((bid) => bid.price), ...asks.map((ask) => ask.price)],\r\n    datasets: [\r\n      {\r\n        label: \"Market Depth\",\r\n        data: [\r\n          ...bids.map((bid) => bid.cumulativeQty),\r\n          ...asks.map((ask) => ask.cumulativeQty),\r\n        ],\r\n        borderColor: \"rgba(0,0,0,0)\",\r\n        backgroundColor: (context) => {\r\n          const chartLabels = context.chart.data.labels;\r\n          return chartLabels.map((price) =>\r\n            price <= midMarketPrice\r\n              ? \"rgba(0, 255, 0, 0.5)\" // Green for bids\r\n              : \"rgba(255, 0, 0, 0.5)\" // Red for asks\r\n          );\r\n        },\r\n        fill: true,\r\n        tension: 0.1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  // Chart options\r\n  const chartOptions = {\r\n    responsive: true,\r\n    scales: {\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: \"Price (USD)\",\r\n        },\r\n        grid: {\r\n          display: false,\r\n        },\r\n      },\r\n      y: {\r\n        title: {\r\n          display: true,\r\n          text: \"Cumulative Quantity\",\r\n        },\r\n      },\r\n    },\r\n    plugins: {\r\n      tooltip: {\r\n        callbacks: {\r\n          label: (context) =>\r\n            `Price: ${context.label}, Depth: ${context.raw.toFixed(2)}`,\r\n        },\r\n      },\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: \"800px\", margin: \"0 auto\", padding: \"20px\" }}>\r\n      <h2 style={{ textAlign: \"center\" }}>{selectedCurrency} Depth Chart</h2>\r\n      <Line data={chartData} options={chartOptions} />\r\n      <p style={{ textAlign: \"center\" }}>\r\n        Mid Market Price: {midMarketPrice?.toFixed(2)}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarketDepthChart;*/\r\n\r\n\"use client\"\r\n\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { Line } from \"react-chartjs-2\"\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\"\r\nimport { useTheme } from 'next-themes'\r\nimport { fetchOrderbook } from \"../lib/api\"\r\n\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Tooltip, Legend)\r\n\r\nconst MarketDepthChart = ({ selectedCurrency }) => {\r\n  const [bids, setBids] = useState([])\r\n  const [asks, setAsks] = useState([])\r\n  const [midMarketPrice, setMidMarketPrice] = useState(null)\r\n  const { theme } = useTheme()\r\n\r\n  const fetchOrderBookData = async () => {\r\n    try {\r\n      const data = await fetchOrderbook(selectedCurrency)\r\n      const formattedBids = data.bids.map((bid) => ({\r\n        price: parseFloat(bid[0]),\r\n        quantity: parseFloat(bid[1]),\r\n      }))\r\n      const formattedAsks = data.asks.map((ask) => ({\r\n        price: parseFloat(ask[0]),\r\n        quantity: parseFloat(ask[1]),\r\n      }))\r\n\r\n      const bidsWithCumulativeQty = calculateCumulativeDepth(formattedBids)\r\n      const asksWithCumulativeQty = calculateCumulativeDepth(formattedAsks)\r\n\r\n      setBids(bidsWithCumulativeQty.reverse())\r\n      setAsks(asksWithCumulativeQty)\r\n      setMidMarketPrice(\r\n        (parseFloat(data.bids[0][0]) + parseFloat(data.asks[0][0])) / 2\r\n      )\r\n    } catch (error) {\r\n      console.error(\"Error fetching orderbook data:\", error)\r\n    }\r\n  }\r\n\r\n  const calculateCumulativeDepth = (orders) => {\r\n    let cumulativeQty = 0\r\n    return orders.map((order) => {\r\n      cumulativeQty += order.quantity\r\n      return { ...order, cumulativeQty }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchOrderBookData()\r\n    const interval = setInterval(fetchOrderBookData, 1000)\r\n    return () => clearInterval(interval)\r\n  }, [selectedCurrency])\r\n\r\n  const chartData = {\r\n    labels: [...bids.map((bid) => bid.price), ...asks.map((ask) => ask.price)],\r\n    datasets: [\r\n      {\r\n        label: \"Market Depth\",\r\n        data: [\r\n          ...bids.map((bid) => bid.cumulativeQty),\r\n          ...asks.map((ask) => ask.cumulativeQty),\r\n        ],\r\n        borderColor: \"rgba(0,0,0,0)\",\r\n        backgroundColor: (context) => {\r\n          const chartLabels = context.chart.data.labels\r\n          return chartLabels.map((price) =>\r\n            price <= midMarketPrice\r\n              ? theme === 'dark' ? \"rgba(34, 197, 94, 0.5)\" : \"rgba(21, 128, 61, 0.5)\"\r\n              : theme === 'dark' ? \"rgba(239, 68, 68, 0.5)\" : \"rgba(185, 28, 28, 0.5)\"\r\n          )\r\n        },\r\n        fill: true,\r\n        tension: 0.1,\r\n      },\r\n    ],\r\n  }\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    scales: {\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: \"Price (USD)\",\r\n          color: theme === 'dark' ? \"#ffffff\" : \"#000000\",\r\n        },\r\n        grid: {\r\n          display: false,\r\n        },\r\n        ticks: {\r\n          color: theme === 'dark' ? \"#ffffff\" : \"#000000\",\r\n        },\r\n      },\r\n      y: {\r\n        title: {\r\n          display: true,\r\n          text: \"Cumulative Quantity\",\r\n          color: theme === 'dark' ? \"#ffffff\" : \"#000000\",\r\n        },\r\n        ticks: {\r\n          color: theme === 'dark' ? \"#ffffff\" : \"#000000\",\r\n        },\r\n        grid: {\r\n          color: theme === 'dark' ? \"rgba(255, 255, 255, 0.1)\" : \"rgba(0, 0, 0, 0.1)\",\r\n        },\r\n      },\r\n    },\r\n    plugins: {\r\n      tooltip: {\r\n        callbacks: {\r\n          label: (context) =>\r\n            `Price: ${context.label}, Depth: ${context.raw.toFixed(2)}`,\r\n        },\r\n      },\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 p-4 rounded-lg shadow-md\">\r\n      <h2 className=\"text-lg font-semibold mb-4 text-gray-800 dark:text-white\">{selectedCurrency} Depth Chart</h2>\r\n      <Line data={chartData} options={chartOptions} />\r\n      <p className=\"text-center mt-4 text-gray-600 dark:text-gray-300\">\r\n        Mid Market Price: {midMarketPrice?.toFixed(2)}\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MarketDepthChart;\r\n\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1194, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1200, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kumud/Dropbox/My%20PC%20%28Vanshika%29/Desktop/crypto-orderbook/src/app/components/Orderbook.js"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { fetchOrderbook, fetchOhlcData } from \"../lib/api\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { Chart as ChartJS, registerables } from \"chart.js\";\r\nimport SpreadIndicator from \"./SpreadIndicator\";\r\nimport CandlestickChart from \"./CandlestickChart\";\r\nimport ImbalanceIndicator from \"./ImbalanceIndicator\";\r\nimport CurrencySelector from \"./CurrencySelector\";\r\nimport MarketDepthChart from \"./MarketDepthChart\";\r\n\r\nChartJS.register(...registerables);\r\n\r\nexport default function Orderbook() {\r\n  const [selectedCurrency, setSelectedCurrency] = useState(\"BTC-USD\");\r\n  const [orderbook, setOrderbook] = useState({ bids: [], asks: [] });\r\n  const [spread, setSpread] = useState(0);\r\n  const [imbalance, setImbalance] = useState(0);\r\n  const [ohlcData, setOhlcData] = useState([]);\r\n\r\n  const fetchData = async () => {\r\n    const orderbookData = await fetchOrderbook(selectedCurrency);\r\n    setOrderbook(orderbookData);\r\n\r\n    const spreadValue =\r\n      orderbookData.bids[0] && orderbookData.asks[0]\r\n        ? parseFloat(orderbookData.asks[0][0]) - parseFloat(orderbookData.bids[0][0])\r\n        : 0;\r\n    setSpread(spreadValue);\r\n\r\n    const bidVolume = orderbookData.bids.reduce((sum, bid) => sum + parseFloat(bid[1]), 0);\r\n    const askVolume = orderbookData.asks.reduce((sum, ask) => sum + parseFloat(ask[1]), 0);\r\n    setImbalance(bidVolume / (bidVolume + askVolume));\r\n\r\n    const ohlc = await fetchOhlcData(selectedCurrency);\r\n    setOhlcData(\r\n      ohlc.map((item) => ({\r\n        t: new Date(item.t),\r\n        o: item.o,\r\n        h: item.h,\r\n        l: item.l,\r\n        c: item.c,\r\n      }))\r\n    );\r\n    console.log('Processed OHLC Data:', ohlcData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    const interval = setInterval(fetchData, 1000);\r\n    return () => clearInterval(interval);\r\n  }, [selectedCurrency]);\r\n\r\n  const marketDepthData = {\r\n    labels: orderbook.bids.map((bid) => bid[0]),\r\n    datasets: [\r\n      {\r\n        label: \"Bids\",\r\n        data: orderbook.bids.map((bid) => bid[1]),\r\n        borderColor: \"green\",\r\n        fill: false,\r\n      },\r\n      {\r\n        label: \"Asks\",\r\n        data: orderbook.asks.map((ask) => ask[1]),\r\n        borderColor: \"red\",\r\n        fill: false,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Real-time {selectedCurrency} Orderbook</h2>\r\n      <CurrencySelector\r\n        selectedCurrency={selectedCurrency}\r\n        onCurrencyChange={setSelectedCurrency}\r\n      />\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\r\n        <div>\r\n          <h3 className=\"text-xl font-semibold mb-2\">Bids</h3>\r\n          <ul className=\"bg-green-100 p-2 rounded\">\r\n            {orderbook.bids.slice(0, 10).map((bid, index) => (\r\n              <li key={index} className=\"mb-1\">{`Price: ${bid[0]}, Quantity: ${bid[1]}`}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div>\r\n          <h3 className=\"text-xl font-semibold mb-2\">Asks</h3>\r\n          <ul className=\"bg-red-100 p-2 rounded\">\r\n            {orderbook.asks.slice(0, 10).map((ask, index) => (\r\n              <li key={index} className=\"mb-1\">{`Price: ${ask[0]}, Quantity: ${ask[1]}`}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mb-4\">\r\n        <h3 className=\"text-xl font-semibold\">Spread: {spread.toFixed(2)}</h3>\r\n      </div>\r\n      <div className=\"mb-8\">\r\n        <SpreadIndicator orderbookData={orderbook} />\r\n      </div>\r\n\r\n      <div className=\"mb-4\">\r\n      <h3 className=\"text-xl font-semibold\">Imbalance: {imbalance.toFixed(2)}</h3>\r\n      </div>\r\n      <div className=\"mb-8\">\r\n        <ImbalanceIndicator orderbookData={orderbook} />\r\n      </div>\r\n\r\n      <div>\r\n        <h3 className=\"text-xl font-semibold mb-2\">Market Depth Chart</h3>\r\n        <Line data={marketDepthData} options={{\r\n          responsive: true,\r\n          scales: {\r\n            x: {\r\n              title: {\r\n                display: true,\r\n                text: 'Price (USD)',\r\n              },\r\n            },\r\n            y: {\r\n              title: {\r\n                display: true,\r\n                text: 'Quantity',\r\n              },\r\n            },\r\n          },\r\n        }} />\r\n      </div>\r\n      <div className=\"mb-8\">\r\n        <MarketDepthChart selectedCurrency={selectedCurrency} />\r\n      </div>\r\n\r\n      <div className=\"mb-8\">\r\n        <CandlestickChart ohlcData={ohlcData} currencyPair={selectedCurrency} />\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1510, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}